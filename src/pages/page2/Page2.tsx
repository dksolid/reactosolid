import { useStore, ViewModel } from 'hooks/useStore';
import { TypeGlobals } from 'models';
import { For, transformers } from 'compSystem/transformers';

import styles from './Page2.scss';

class VM implements ViewModel {
  constructor(public context: TypeGlobals) {
    return transformers.makeAutoObservable(this);
  }

  afterMount() {
    void this.context.actions.routing.setMetaData({
      title: 'Page 2',
    });
  }
}

export function Page2() {
  const { context } = useStore(VM);

  const tableData = [
    { id: 1, name: 'John Doe', email: 'john@example.com', role: 'Developer' },
    { id: 2, name: 'Jane Smith', email: 'jane@example.com', role: 'Designer' },
    { id: 3, name: 'Bob Johnson', email: 'bob@example.com', role: 'Manager' },
    { id: 4, name: 'Alice Brown', email: 'alice@example.com', role: 'Product Owner' },
    { id: 5, name: 'Charlie Wilson', email: 'charlie@example.com', role: 'QA Engineer' },
  ];

  return (
    <div className={styles.content}>
      <header className={styles.header}>
        <h1>Welcome to a Page generated by AI</h1>
        <p className={styles.screenInfo}>Screen height: {context.store.ui.screen.height}px</p>
      </header>

      <section className={styles.tableSection}>
        <h2>Team Members</h2>
        <div className={styles.tableContainer}>
          <table className={styles.table}>
            <thead>
              <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Role</th>
              </tr>
            </thead>
            <tbody>
              <For each={tableData}>
                {(person) => {
                  return (
                    <tr key={person.id}>
                      <td>{person.id}</td>
                      <td>{person.name}</td>
                      <td>{person.email}</td>
                      <td>{person.role}</td>
                    </tr>
                  );
                }}
              </For>
            </tbody>
          </table>
        </div>
      </section>

      <section className={styles.articlesSection}>
        <h2>Latest Articles</h2>
        <div className={styles.articlesGrid}>
          <article className={styles.articleCard}>
            <div className={styles.articleImage} data-color="blue"></div>
            <div className={styles.articleContent}>
              <h3>Getting Started with Solid.js</h3>
              <p>
                Learn the basics of Solid.js and how it differs from other frameworks like React.
              </p>
              <a href="#" className={styles.readMore}>
                Read More
              </a>
            </div>
          </article>

          <article className={styles.articleCard}>
            <div className={styles.articleImage} data-color="green"></div>
            <div className={styles.articleContent}>
              <h3>Advanced State Management</h3>
              <p>Explore different patterns for managing state in complex Solid.js applications.</p>
              <a href="#" className={styles.readMore}>
                Read More
              </a>
            </div>
          </article>

          <article className={styles.articleCard}>
            <div className={styles.articleImage} data-color="purple"></div>
            <div className={styles.articleContent}>
              <h3>Building Responsive UIs</h3>
              <p>
                Tips and tricks for creating responsive user interfaces that work on all devices.
              </p>
              <a href="#" className={styles.readMore}>
                Read More
              </a>
            </div>
          </article>
        </div>
      </section>

      <section className={styles.infoSection}>
        <h2>About This Page</h2>
        <p>
          This is a demo page showcasing various UI components and layouts built with Solid.js. The
          content includes a responsive table, article cards, and styled sections.
        </p>
        <div className={styles.infoCards}>
          <div className={styles.infoCard}>
            <h3>Fast Rendering</h3>
            <p>Solid.js provides excellent performance with its fine-grained reactivity system.</p>
          </div>
          <div className={styles.infoCard}>
            <h3>Component-Based</h3>
            <p>Build your UI with reusable, composable components for better maintainability.</p>
          </div>
          <div className={styles.infoCard}>
            <h3>Developer Experience</h3>
            <p>Enjoy a great developer experience with JSX syntax and powerful primitives.</p>
          </div>
        </div>
      </section>
    </div>
  );
}
